#!/usr/bin/env bash
#
# flypwd -- gestione sicura delle password utente
#
# 
# Uso:
# 
# flypwd --clean
#        cancella le credenziali crittografate utente
# flypwd [servizio]
#        registra le credenziali crittografate
#
#
# esempio: 
#
# export http_proxy=http://UTENZE\\${LOGNAME}:$(/home/group/public/bits/usr/bin/flypwd)@itaca-prod.utenze.bankit.it:8079 

[ $# -eq 0 ] && PWDNAM=default
[ ! $# -eq 0 ] && PWDNAM=$1

WDIR=$HOME/.flypwd
mkdir -p $WDIR
RSAKEY=flypwd-${PWDNAM}.key
PUBKEY=${RSAKEY}.pub
RSAFILE=${WDIR}/${RSAKEY}
PUBFILE=${WDIR}/${PUBKEY}
PWD_FILE=${WDIR}/${PWDNAM}

if [ x"$1" == x"--clean" ] ; then
    rm -rf $WDIR
    exit 0
fi


check_key() {    
    if [ -f "$1" ]; then 
	openssl rsa -check -in "$1" >/dev/null 2>/dev/null
	if [ $? -eq 0 ]; then
	    [ -f "$PUBFILE" ] && rm -f  "$PUBFILE" 
	    return 1
	fi
    fi
    return 0
}

createpwd() {
    openssl rsautl -encrypt -inkey "$PUBFILE" -pubin -in <(echo  $1) -out "${PWD_FILE}"  # 2 >/dev/null
}

exrsagen() {  
    check_key "$RSAFILE" 
    if [ $? ]; then 
	[ -f "$RSAFILE" ] && rm -f  "$RSAFILE" 
	ssh-keygen -t rsa -f "$RSAFILE" -N "" -q  2>/dev/null 
    fi
}

expubgen() {  
    check_key "$PUBFILE" 
    if [ $? ]; then
	[ -f "$PUBFILE" ] && rm -f  "$PUBFILE" 
	openssl rsa -in "$RSAFILE" -out "$PUBFILE" -outform PEM -pubout 2>/dev/null
    fi
}

emit_pwd() {
    if [ -f "${RSAFILE}" -a -f "${PWD_FILE}" ] ; then 
	passw=$(openssl rsautl -decrypt -inkey "${RSAFILE}" -in "${PWD_FILE}")
	# echo $passw | kinit >/dev/null
	if [ $? -eq 0 ] ; then
	    echo $passw
	    exit 0
	else
	    rm -f "${PWD_FILE}"
	fi
    fi    
}

if [ x"$2" == x"--clean" ] ; then
    rm -f ${PWD_FILE} ${RSAFILE} ${PUBFILE}
fi

emit_pwd
exrsagen
expubgen

if [ ! -f "${PWD_FILE}" ]; then
    if tty -s 
    then
     	stty -echo 
	read -p "Password: " passwd; echo
	stty echo
	createpwd $passwd
	emit_pwd
    else
	exit 1
    fi
fi
