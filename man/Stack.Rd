% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stack.r
\name{Stack}
\alias{Stack}
\title{Stack data structure}
\description{
This is a stack data structure, operations you can do with it are:
}
\details{
- push
 - pop
 - peek
}
\examples{
\dontrun{
 s <- Stack()
 s$push(1)
 s$peek()
 s$pop()
}
Constructor for Stack

Every item passed in the ellipsis is pushed in the stack
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Stack$new()}}
\item \href{#method-push}{\code{Stack$push()}}
\item \href{#method-peek}{\code{Stack$peek()}}
\item \href{#method-pop}{\code{Stack$pop()}}
\item \href{#method-empty}{\code{Stack$empty()}}
\item \href{#method-length}{\code{Stack$length()}}
\item \href{#method-show}{\code{Stack$show()}}
\item \href{#method-clone}{\code{Stack$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{items to be pushed in the stack
Push an item in the stack}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-push"></a>}}
\if{latex}{\out{\hypertarget{method-push}{}}}
\subsection{Method \code{push()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$push(item)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{item}}{object to be pushed
Peek an item from the stack

Return the item on top of the stack. Raises an error if the
stack is empty}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-peek"></a>}}
\if{latex}{\out{\hypertarget{method-peek}{}}}
\subsection{Method \code{peek()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$peek()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
element on top of the stack
Pops an item from the stack

returns and removes the item on top of the stack. If the stack
is empty, it raises an error.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pop"></a>}}
\if{latex}{\out{\hypertarget{method-pop}{}}}
\subsection{Method \code{pop()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$pop()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
element on top of the stack
`TRUE` is stack is empty
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-empty"></a>}}
\if{latex}{\out{\hypertarget{method-empty}{}}}
\subsection{Method \code{empty()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$empty()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
`TRUE` if empty, `FALSE` otherwise
Returns the length of the stack
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-length"></a>}}
\if{latex}{\out{\hypertarget{method-length}{}}}
\subsection{Method \code{length()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$length()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the number of elements in the stack
Internal method for object rappresentatio on REPL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-show"></a>}}
\if{latex}{\out{\hypertarget{method-show}{}}}
\subsection{Method \code{show()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$show(sep = "\\n")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sep}}{separator used on the output}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stack$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
